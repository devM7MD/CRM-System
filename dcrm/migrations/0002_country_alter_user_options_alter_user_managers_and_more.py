# Generated by Django 5.1.7 on 2025-04-05 02:49

import django.contrib.auth.models
import django.contrib.auth.validators
import django.core.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
        ('dcrm', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Country',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name_en', models.CharField(max_length=100)),
                ('name_ar', models.CharField(max_length=100)),
                ('currency', models.CharField(max_length=3)),
                ('timezone', models.CharField(max_length=50)),
                ('is_active', models.BooleanField(default=True)),
            ],
            options={
                'verbose_name_plural': 'Countries',
            },
        ),
        migrations.AlterModelOptions(
            name='user',
            options={'permissions': [('manage_users', 'Can manage all users'), ('manage_roles', 'Can manage user roles'), ('view_audit_log', 'Can view audit logs'), ('view_financial_reports', 'Can view financial reports'), ('approve_sourcing', 'Can approve sourcing requests')]},
        ),
        migrations.AlterModelManagers(
            name='user',
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.RemoveField(
            model_name='user',
            name='is_admin',
        ),
        migrations.AddField(
            model_name='user',
            name='business_name',
            field=models.CharField(blank=True, max_length=255, null=True),
        ),
        migrations.AddField(
            model_name='user',
            name='date_joined',
            field=models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined'),
        ),
        migrations.AddField(
            model_name='user',
            name='expected_daily_orders',
            field=models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(1000)]),
        ),
        migrations.AddField(
            model_name='user',
            name='first_name',
            field=models.CharField(blank=True, max_length=150, verbose_name='first name'),
        ),
        migrations.AddField(
            model_name='user',
            name='groups',
            field=models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='dcrm_user_set', to='auth.group', verbose_name='groups'),
        ),
        migrations.AddField(
            model_name='user',
            name='id_document',
            field=models.ImageField(blank=True, null=True, upload_to='id_documents/'),
        ),
        migrations.AddField(
            model_name='user',
            name='is_active',
            field=models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active'),
        ),
        migrations.AddField(
            model_name='user',
            name='is_staff',
            field=models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status'),
        ),
        migrations.AddField(
            model_name='user',
            name='is_superuser',
            field=models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status'),
        ),
        migrations.AddField(
            model_name='user',
            name='last_login',
            field=models.DateTimeField(blank=True, null=True, verbose_name='last login'),
        ),
        migrations.AddField(
            model_name='user',
            name='last_name',
            field=models.CharField(blank=True, max_length=150, verbose_name='last name'),
        ),
        migrations.AddField(
            model_name='user',
            name='role',
            field=models.CharField(choices=[('super_admin', 'Super Admin'), ('admin', 'Admin'), ('seller', 'Seller'), ('stock_keeper', 'Stock Keeper'), ('call_center_manager', 'Call Center Manager'), ('call_center_agent', 'Call Center Agent'), ('packaging', 'Pick & Pack'), ('delivery', 'Delivery'), ('follow_up', 'Follow-up Dashboard'), ('accountant', 'Accountant')], default='admin', max_length=20),
        ),
        migrations.AddField(
            model_name='user',
            name='user_permissions',
            field=models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='dcrm_user_set', to='auth.permission', verbose_name='user permissions'),
        ),
        migrations.AlterField(
            model_name='user',
            name='email',
            field=models.EmailField(blank=True, max_length=254, verbose_name='email address'),
        ),
        migrations.AlterField(
            model_name='user',
            name='password',
            field=models.CharField(max_length=128, verbose_name='password'),
        ),
        migrations.AlterField(
            model_name='user',
            name='phone_number',
            field=models.CharField(max_length=20),
        ),
        migrations.AlterField(
            model_name='user',
            name='username',
            field=models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username'),
        ),
        migrations.CreateModel(
            name='AuditLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action', models.CharField(max_length=255)),
                ('model_affected', models.CharField(max_length=100)),
                ('record_id', models.CharField(max_length=100)),
                ('old_value', models.TextField(blank=True, null=True)),
                ('new_value', models.TextField(blank=True, null=True)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('reason', models.TextField(blank=True, null=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='user',
            name='country',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='users', to='dcrm.country'),
        ),
        migrations.AddField(
            model_name='user',
            name='residence_country',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='resident_users', to='dcrm.country'),
        ),
        migrations.CreateModel(
            name='DeliveryCompany',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name_en', models.CharField(max_length=100)),
                ('name_ar', models.CharField(max_length=100)),
                ('base_shipping_cost', models.DecimalField(decimal_places=2, max_digits=10)),
                ('api_key', models.CharField(blank=True, max_length=255, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('countries', models.ManyToManyField(related_name='delivery_companies', to='dcrm.country')),
            ],
            options={
                'verbose_name_plural': 'Delivery Companies',
            },
        ),
        migrations.CreateModel(
            name='Fee',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('fee_type', models.CharField(choices=[('payment_gateway', 'Payment Gateway'), ('shipping', 'Shipping'), ('service', 'Service')], max_length=20)),
                ('calculation_type', models.CharField(choices=[('percentage', 'Percentage'), ('fixed', 'Fixed Amount')], max_length=10)),
                ('value', models.DecimalField(decimal_places=2, max_digits=10)),
                ('is_active', models.BooleanField(default=True)),
                ('applies_to', models.ManyToManyField(blank=True, related_name='fees', to='dcrm.country')),
            ],
        ),
        migrations.CreateModel(
            name='MarketingPlatform',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('platform', models.CharField(choices=[('google_ads', 'Google Ads'), ('tiktok_ads', 'TikTok Ads'), ('meta_ads', 'Meta Ads')], max_length=20)),
                ('seller', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='marketing_platforms', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order_code', models.CharField(editable=False, max_length=20, unique=True)),
                ('customer_name', models.CharField(max_length=255)),
                ('customer_phone', models.CharField(max_length=20)),
                ('customer_address', models.TextField()),
                ('status', models.CharField(choices=[('new', 'New'), ('confirmed', 'Confirmed'), ('no_response', 'No Response'), ('closed', 'Closed'), ('postponed', 'Postponed'), ('under_review', 'Under Review'), ('cancelled', 'Cancelled'), ('in_preparation', 'In Preparation'), ('ready_for_packaging', 'Ready for Packaging'), ('packaging_in_progress', 'Packaging in Progress'), ('ready_for_delivery', 'Ready for Delivery'), ('in_delivery', 'In Delivery'), ('delivered', 'Delivered'), ('returned', 'Returned'), ('failed_delivery', 'Failed Delivery')], default='new', max_length=30)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('call_attempts', models.IntegerField(default=0)),
                ('last_call_time', models.DateTimeField(blank=True, null=True)),
                ('postponed_date', models.DateField(blank=True, null=True)),
                ('cancellation_reason', models.TextField(blank=True, null=True)),
                ('agent_notes', models.TextField(blank=True, null=True)),
                ('tracking_link', models.URLField(blank=True, null=True)),
                ('shipping_cost', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('delivery_date', models.DateField(blank=True, null=True)),
                ('returned_reason', models.TextField(blank=True, null=True)),
                ('total_price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('payment_method', models.CharField(choices=[('cash', 'Cash on Delivery'), ('card', 'Credit/Debit Card'), ('bank_transfer', 'Bank Transfer'), ('online_payment', 'Online Payment')], max_length=50)),
                ('payment_status', models.CharField(choices=[('pending', 'Pending'), ('paid', 'Paid'), ('refunded', 'Refunded'), ('partially_refunded', 'Partially Refunded')], default='pending', max_length=20)),
                ('call_center_agent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='handled_orders', to=settings.AUTH_USER_MODEL)),
                ('delivery_company', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='dcrm.deliverycompany')),
                ('seller', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='orders', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='CallLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('call_time', models.DateTimeField(auto_now_add=True)),
                ('call_type', models.CharField(choices=[('phone', 'Phone Call'), ('whatsapp', 'WhatsApp Message')], max_length=20)),
                ('result', models.CharField(choices=[('confirmed', 'Confirmed'), ('no_answer', 'No Answer'), ('cancelled', 'Cancelled'), ('escalated', 'Escalated'), ('postponed', 'Postponed')], max_length=20)),
                ('notes', models.TextField(blank=True, null=True)),
                ('agent', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='call_logs', to='dcrm.order')),
            ],
        ),
        migrations.CreateModel(
            name='PerformanceMetric',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('calls_made', models.IntegerField(default=0)),
                ('successful_confirmations', models.IntegerField(default=0)),
                ('average_response_time', models.DurationField(blank=True, null=True)),
                ('inventory_accuracy', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('average_order_preparation_time', models.DurationField(blank=True, null=True)),
                ('error_rate', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('deliveries_completed', models.IntegerField(default=0)),
                ('successful_deliveries', models.IntegerField(default=0)),
                ('average_delivery_time', models.DurationField(blank=True, null=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='performance_metrics', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(editable=False, max_length=20, unique=True)),
                ('name_en', models.CharField(max_length=255)),
                ('name_ar', models.CharField(max_length=255)),
                ('description', models.TextField()),
                ('selling_price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('purchase_price', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('image', models.ImageField(blank=True, null=True, upload_to='products/')),
                ('product_link', models.URLField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('seller', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='products', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='OrderItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.IntegerField()),
                ('price_per_unit', models.DecimalField(decimal_places=2, max_digits=10)),
                ('order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='items', to='dcrm.order')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dcrm.product')),
            ],
        ),
        migrations.CreateModel(
            name='SalesChannel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name_en', models.CharField(max_length=100)),
                ('name_ar', models.CharField(max_length=100)),
                ('url', models.URLField()),
                ('api_credentials', models.TextField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('country', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dcrm.country')),
                ('seller', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sales_channels', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='order',
            name='sales_channel',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='orders', to='dcrm.saleschannel'),
        ),
        migrations.CreateModel(
            name='SellerFee',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('custom_value', models.DecimalField(decimal_places=2, max_digits=10)),
                ('is_active', models.BooleanField(default=True)),
                ('fee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dcrm.fee')),
                ('seller', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='fees', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='SourcingRequest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tracking_number', models.CharField(editable=False, max_length=20, unique=True)),
                ('carton_quantity', models.IntegerField()),
                ('source_country', models.CharField(max_length=100)),
                ('finance_source', models.CharField(choices=[('seller_account', 'Seller Account'), ('company_account', 'Company Account')], max_length=20)),
                ('sourcing_agent', models.CharField(max_length=100)),
                ('agent_phone', models.CharField(max_length=20)),
                ('weight', models.DecimalField(decimal_places=2, help_text='Weight in KG', max_digits=10)),
                ('status', models.CharField(choices=[('submitted', 'Submitted'), ('under_review', 'Under Review'), ('approved', 'Approved'), ('rejected', 'Rejected'), ('completed', 'Completed')], default='submitted', max_length=20)),
                ('priority', models.CharField(choices=[('normal', 'Normal'), ('urgent', 'Urgent')], default='normal', max_length=10)),
                ('shipping_cost', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('payment_status', models.CharField(choices=[('pending', 'Pending'), ('partially_paid', 'Partially Paid'), ('paid', 'Paid'), ('overdue', 'Overdue')], default='pending', max_length=20)),
                ('payment_method', models.CharField(blank=True, max_length=50, null=True)),
                ('due_date', models.DateField(blank=True, null=True)),
                ('received_at', models.DateTimeField(blank=True, null=True)),
                ('quality_check_passed', models.BooleanField(blank=True, null=True)),
                ('quality_check_notes', models.TextField(blank=True, null=True)),
                ('destination_country', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dcrm.country')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dcrm.product')),
                ('received_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='received_sourcing', to=settings.AUTH_USER_MODEL)),
                ('seller', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sourcing_requests', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='SourcingImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to='sourcing/')),
                ('is_product_photo', models.BooleanField(default=True)),
                ('uploaded_at', models.DateTimeField(auto_now_add=True)),
                ('sourcing_request', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='images', to='dcrm.sourcingrequest')),
            ],
        ),
        migrations.CreateModel(
            name='Warehouse',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('location', models.CharField(max_length=255)),
                ('is_active', models.BooleanField(default=True)),
                ('country', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='warehouses', to='dcrm.country')),
            ],
        ),
        migrations.CreateModel(
            name='Inventory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('total_quantity', models.IntegerField(default=0)),
                ('available_quantity', models.IntegerField(default=0)),
                ('in_delivery_quantity', models.IntegerField(default=0)),
                ('shelf_location', models.CharField(blank=True, max_length=50, null=True)),
                ('last_updated', models.DateTimeField(auto_now=True)),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='inventory', to='dcrm.product')),
                ('warehouse', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='inventory', to='dcrm.warehouse')),
            ],
            options={
                'verbose_name_plural': 'Inventories',
            },
        ),
    ]
